I"S/<!-- Check whether the assignment is ready to release -->

<!-- End of check whether the assignment is up to date -->

<!-- Check whether the assignment is up to date -->

<!-- End of check whether the assignment is up to date -->

<div class="alert alert-info">
This assignment is due on Thursday, January 23, 2020 before 01:30PM. 
</div>

<div class="alert alert-info">
You can download the materials for this assignment here:
<ul>

<li><a href="https://colab.research.google.com/github/interactive-fiction-class/interactive-fiction-class.github.io/blob/master/homeworks/text-adventure-game/Text_Adventure_Game.ipynb">Text Adventure Game (Python Notebook viewable on Google Colab)</a></li>

</ul>
</div>

<h1 id="homework-1-build-a-text-adventure-game">Homework 1: Build a Text-Adventure Game</h1>

<h2 id="instructions">Instructions</h2>

<p>In this homework assignment, you will write your own classic text adventure game.  This homework can be completed in groups of up to 2 people.  You will implement two text adventure games.  One will be a re-implementation of the <strong>Action Castle</strong> game, and one will be a game that you design yourself. The game that you design can be on any topic, or can tell any story of your choice.  We will play the games that you design during class, and part of your grade will be awarded based on how creative/exciting your classmates think your game is.</p>

<h3 id="starter-code">Starter code</h3>

<p>We have provided <a href="https://colab.research.google.com/github/interactive-fiction-class/interactive-fiction-class.github.io/blob/master/homeworks/text-adventure-game/Text_Adventure_Game.ipynb">starter code for a basic text adventure game</a>.  You are free modify it however you want, and bring in any dependencies you feel will be useful.</p>

<h3 id="task-1-implement-action-castle">Task 1: Implement Action Castle</h3>

<p>Action Castle is a game by Jared A. Sorensen.  It is included in his book <a href="http://www.memento-mori.com/parsely-products/parsely-pdf">Parsley</a>, which is a collection of games inspired by the text-adventures of the 1980s.  Parsley is a party game where you take on the role of the parser, and the players shout out commands like GO NORTH, LIGHT LAMP or GET SWORD.  You obtusely follow player’s commands, simulating a computer’s limited vocabulary.  The effect is suprisingly hilarious and fun.</p>

<p>We got Jared’s permission to distribute the Action Castle module in class, and you can also <a href="http://www.memento-mori.com/parsely-products/parsely-pdf">buy the Parsley book for $20</a> if you’d like to support an awesome indy game developer.</p>

<p>You should modify the provided code to:</p>
<ol>
  <li>Create the 13 locations from Action Castle (Cottage, Garden Path, Fishing Pond, Winding Path, 
Top of the Tall Tree, Drawbridge, Courtyard, Tower Stairs, Tower, 
Dungeon Stairs, Dungeon, Great Feasting Hall, Throne Room).</li>
  <li>Create the items for the game (fishing poll, rosebush, club, fish, the troll etc.).</li>
  <li>Update the code so that it can handle the actions/commands/preconditions that are described by the Action Castle module.</li>
</ol>

<div class="alert alert-warning">
  <p><strong>Need a hint on how to get started?</strong> I as able to re-implement the whole of the Action Castle game<script type="math/tex">^*</script> using the starter code by modifying the <code class="highlighter-rouge">build_game</code> function, the <code class="highlighter-rouge">check_preconditions</code> function, and by adding a few new methods to the <a href="https://colab.research.google.com/github/interactive-fiction-class/interactive-fiction-class.github.io/blob/master/homeworks/text-adventure-game/Text_Adventure_Game.ipynb#scrollTo=YNrsHhpMTC8w">Special functions section</a>.  None of the other starter code needed to be modified. It took me about 5 hours total to implement the game.</p>

  <p><script type="math/tex">^*</script>Except for this part: <em>The ghost will reach out for the player to stop his heart if the player lingers here.</em> I skipped that part of the game.</p>
</div>

<div class="alert alert-warning">
  <p><strong>Advanced Hint:</strong> To do handle state changes (like the guard going from awake to unconscious), I used two Items to represent the different states, and then used a special function to perform multiple actions that would destroy Item and put the other Item in its place.  For example:</p>
  <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">guard</span> <span class="o">=</span> <span class="n">Item</span><span class="p">(</span><span class="s">"guard"</span><span class="p">,</span> <span class="s">"a guard carrying a sword and a key"</span><span class="p">,</span> <span class="s">"HE LOOKS AT YOU SUSPICIOUSLY."</span><span class="p">,</span>
    <span class="n">start_at</span><span class="o">=</span><span class="n">courtyard</span><span class="p">,</span> <span class="n">gettable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
  <span class="n">unconscious_guard</span> <span class="o">=</span> <span class="n">Item</span><span class="p">(</span><span class="s">"unconscious guard"</span><span class="p">,</span> <span class="s">"an unconscious guard is slumpped against the wall"</span><span class="p">,</span> 
    <span class="s">"HE HAS BITS OF BRANCH ON HIS UNIFORM."</span><span class="p">,</span> <span class="n">start_at</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">gettable</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

  <span class="n">guard</span><span class="o">.</span><span class="n">add_action</span><span class="p">(</span><span class="s">"hit guard with branch"</span><span class="p">,</span> <span class="n">perform_multiple_actions</span><span class="p">,</span> 
      <span class="p">([(</span><span class="n">destroy_item</span><span class="p">,</span> <span class="p">(</span><span class="n">branch</span><span class="p">,</span><span class="s">"You swing your branch against the guard. It shatters to pieces."</span><span class="p">,</span>
                               <span class="s">"You already tried that."</span><span class="p">)),</span>
      <span class="p">(</span><span class="n">destroy_item</span><span class="p">,</span> <span class="p">(</span><span class="n">guard</span><span class="p">,</span><span class="s">"The guard slumps over, unconscious."</span><span class="p">,</span><span class="s">""</span><span class="p">)),</span>
      <span class="p">(</span><span class="n">create_item</span><span class="p">,</span> <span class="p">(</span><span class="n">unconscious_guard</span><span class="p">,</span><span class="s">"The guard's unconscious body lies on the ground."</span><span class="p">)),</span>
      <span class="p">(</span><span class="n">create_item</span><span class="p">,</span> <span class="p">(</span><span class="n">key</span><span class="p">,</span><span class="s">"His key falls from his hand."</span><span class="p">)),</span>
      <span class="p">]),</span> <span class="n">preconditions</span><span class="o">=</span><span class="p">{</span><span class="s">"inventory_contains"</span><span class="p">:</span><span class="n">branch</span> <span class="p">,</span> <span class="s">"location_has_item"</span><span class="p">:</span> <span class="n">guard</span><span class="p">})</span>
 
</code></pre></div>  </div>
  <p>There are other ways of handling this, and you’re not obligated to use my way.</p>
</div>

<h3 id="task-2-implement-your-own-creation">Task 2: Implement Your Own Creation</h3>

<p>Your game should include all of the following:</p>

<ul>
  <li>At least 3 Locations</li>
  <li>At least 3 Items that can be interacted with. These can be doors, keys, tools, ogres, etc.</li>
  <li>At least one “puzzle” where there are certain preconditions that must be met before the player can make forward progress.</li>
  <li>At least one “win” state and at least one “lose” state.</li>
</ul>

<p>Optionally, you can think about adding other elements to your game, like:</p>
<ul>
  <li>Scoring</li>
  <li>Changes over time</li>
  <li>Interesting non-player characters</li>
</ul>

<p>Feel free to modify the starter code in any way you see fit in order to enable your game ideas. However, the “Play the game” and “Visualize your game” code blocks should remain functional.</p>

<p>We will play your game in class on January 23, and your classmates will help to grade this assignment based on how fun/creative/interesting your game is.  Be creative!  For inspiration, we recommend searching Pinterest for cross-section maps.  Here are some that we like:</p>

<div class="container-fluid">
  <div class="row">
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/lighthouse.jpg"><img src="inspiration/lighthouse.jpg" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/treehouse.jpg"><img src="inspiration/treehouse.jpg" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/oubliette.png"><img src="inspiration/oubliette.png" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/storm-king.jpg"><img src="inspiration/storm-king-small.jpg" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/mars.pdf"><img src="inspiration/mars.jpg" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
<div class="col-lg-4 col-md-6 col-xs-12" style="margin-bottom: 20px; height: 350px;">
<a href="inspiration/apartment.jpg"><img src="inspiration/apartment.jpg" style="height: 100%; width: 100%; max-width: 250px" /></a>
</div>
  </div>
</div>

<div class="alert alert-warning">
  <p><strong>Tip:</strong> I recommend drawing out on your game on <a href="http://print-graph-paper.com/">graph paper</a> before you get started.</p>
</div>

<h2 id="what-to-submit">What to submit</h2>

<p>You should submit a link to a Github repository which contains the following:</p>

<ol>
  <li>An IPython notebook called <code class="highlighter-rouge">action_castle.ipynb</code> that runs Action Castle. (You can use <a href="https://colab.research.google.com/github/googlecolab/colabtools/blob/master/notebooks/colab-github-demo.ipynb">Google Colab to view IPython Notebooks on Github</a>.)</li>
  <li>An IPython notebook called <code class="highlighter-rouge">my_game.ipynb</code> that runs the initial version of your game.</li>
  <li>A text file called <code class="highlighter-rouge">playthrough.txt</code> with all of the commands that we need to issue to complete your game. It shold be a plain text file with one command per line.</li>
  <li>A text file called <code class="highlighter-rouge">README.md</code> containing a short paragraph describing your game, and why you picked that topic.</li>
</ol>

<p>Submissions should be done on <a href="https://www.gradescope.com/courses/78405/assignments/322804">Gradescope</a>.</p>

<h2 id="recommended-readings">Recommended readings</h2>

<ul>
  <li>
    <p>Chris Ainsley / Adventuron Software Limited, <a href="https://adventuron.io/classroom/">Adventuron Classroom</a>.  <i>This is a tutorial aimed at teaching elementary school kids how to program by writing a text adventure game.  I modeled our text adventure game after this Adventuron system.</i></p>
  </li>
  <li>
    <p>The Hitchhiker’s Guide to the Galaxy (H2G2), <a href="https://h2g2.com/edited_entry/A20600641">How to Make a Text-Based Adventure - Commands and Parser</a>.  <i></i></p>
  </li>
</ul>

:ET